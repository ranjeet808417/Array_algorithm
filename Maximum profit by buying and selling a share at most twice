#include <iostream>
using namespace std;

int gcd_of_range(int price[],int n){
int profit[n];
memset(profit,0,sizeof(profit));
int max_stock=price[n-1];
for(int i=n-2;i>=0;i--){
if(max_stock<price[i]){
        max_stock=price[i];

}
profit[i]=max(profit[i+1],max_stock-price[i]);

}
int min_stock=price[0];
for(int i=1;i<n;i++){
if(min_stock>price[i]){
        min_stock=price[i];
}
profit[i]=max(profit[i-1],profit[i]+price[i]-min_stock);

}

return profit[n-1];


}

int main() {
   int n;
   cin>>n;
   int arr[n];
   for(int i=0;i<n;i++){
           cin>>arr[i];
   }
   
   cout<<gcd_of_range(arr,n);

}
